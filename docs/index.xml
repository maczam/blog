<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>My Blog</title>
    <link>https://www.hexin.me/</link>
    <description>Recent content on My Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 26 Jul 2019 17:51:05 +0800</lastBuildDate>
    
        <atom:link href="https://www.hexin.me/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>目标计划</title>
      <link>https://www.hexin.me/post/2019/07/todu/</link>
      <pubDate>Fri, 26 Jul 2019 17:51:05 +0800</pubDate>
      
      <guid>https://www.hexin.me/post/2019/07/todu/</guid>
      
        <description>

&lt;p&gt;这里只是列了一些flag，激励自己努力完成。&lt;/p&gt;

&lt;h1 id=&#34;填坑&#34;&gt;填坑&lt;/h1&gt;

&lt;h2 id=&#34;源码-框架&#34;&gt;源码&amp;amp;框架&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;etcd &amp;amp; zookeeper&lt;/li&gt;
&lt;li&gt;nsq&lt;/li&gt;
&lt;li&gt;fasthttp&lt;/li&gt;
&lt;li&gt;gin&lt;/li&gt;
&lt;li&gt;等&amp;hellip;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;算法&#34;&gt;算法&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;一致性算法&lt;/li&gt;
&lt;li&gt;一致性hash&lt;/li&gt;
&lt;li&gt;红黑树&lt;/li&gt;
&lt;li&gt;btree&lt;/li&gt;
&lt;li&gt;lr&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;阅读&#34;&gt;阅读&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://i6448038.github.io/2019/04/11/go-channel&#34;&gt;https://i6448038.github.io/2019/04/11/go-channel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>Hugo搭建Github静态Blog</title>
      <link>https://www.hexin.me/post/2019/07/make-blog/</link>
      <pubDate>Thu, 25 Jul 2019 16:45:53 +0800</pubDate>
      
      <guid>https://www.hexin.me/post/2019/07/make-blog/</guid>
      
        <description>

&lt;p&gt;一直都有搭建blog的想法，最近研究了静态博客系统。主要想法是依赖于github，其中有两个github pages和github issues思路。&lt;/p&gt;

&lt;p&gt;那问题了来了，什么是github pages？ github pages是github提供一个在线服务，可以将github仓库里面的静态资源（html、markdwon）渲染成也页面，帮你生成一个二级域名，甚至可以绑定自己域名。所以使用pages的人最多。为什么有些框架可以使用github的issues能构建出漂亮的静态站点，甚至动态的呢？框架拉取你的issues信息，并转化成html保存到github上，然后在使用pages服务，具体如何使用，这里有介绍&lt;a href=&#34;https://www.v2ex.com/amp/t/566714&#34;&gt;https://www.v2ex.com/amp/t/566714&lt;/a&gt;。更有一些激进的人直接issues系统，只做一些记录。我最终的选择直接pages服务来搭建，&lt;/p&gt;

&lt;p&gt;大方向选定以后，开始选中框架，我喜欢一些从简，所以我选择hugo，编写工具使用Typora，图床使用阿里的oss，毕竟国内访问的多。 下面就开始我的搭建之路。&lt;/p&gt;

&lt;p&gt;具体安装过程，参考&lt;a href=&#34;https://www.gohugo.org&#34;&gt;https://www.gohugo.org&lt;/a&gt;，下面我只说我才过的一些坑，和我的系统构架。&lt;/p&gt;

&lt;h1 id=&#34;git仓库构建&#34;&gt;git仓库构建&lt;/h1&gt;

&lt;h2 id=&#34;仓库目录结构&#34;&gt;仓库目录结构&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;   drwxr-xr-x  15 hexin  staff   480B  7 25 14:13 .
   drwxr-xr-x  18 hexin  staff   576B  7 25 13:21 ..
   drwxr-xr-x  14 hexin  staff   448B  7 25 16:28 .git
   -rw-r--r--   1 hexin  staff   100B  7 25 13:43 .gitmodules
   -rw-r--r--   1 hexin  staff     0B  7 25 14:13 .nojekyll
   drwxr-xr-x   3 hexin  staff    96B  7 25 14:02 archetypes
   -rw-r--r--   1 hexin  staff   615B  7 25 14:01 config.toml
   drwxr-xr-x   3 hexin  staff    96B  7 25 14:05 content
   drwxr-xr-x   2 hexin  staff    64B  7 25 13:21 data
   -rwxr-xr-x   1 hexin  staff   436B  7 25 14:13 deploy.sh
   drwxr-xr-x  19 hexin  staff   608B  7 25 13:21 docs
   drwxr-xr-x   2 hexin  staff    64B  7 25 13:21 layouts
   drwxr-xr-x   3 hexin  staff    96B  7 25 13:49 resources
   drwxr-xr-x   2 hexin  staff    64B  7 25 13:21 static
   drwxr-xr-x   3 hexin  staff    96B  7 25 13:43 themes
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;为了简单，我直接将真个仓库全部push到github，这样我本地文件和github完全一致，hugo官方正式将生成好的放到github，这样github缺少好多文件。pages服务是支持使用master分支的docs目录，只要我将最后生成html页面保存到docs里面，理论上是可行的。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://hexinme-blog.oss-cn-beijing.aliyuncs.com/blog/img/20190725141630.png&#34; alt=&#34;github page&#34; /&gt;&lt;/p&gt;

&lt;p&gt;config.toml 文件增加&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;publishDir = &amp;ldquo;docs&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;发布-部署&#34;&gt;发布&amp;amp;部署&lt;/h1&gt;

&lt;p&gt;部署需要经历2步，先生成html，然后push到github。有些人借助github提供的ci服务，有些小题大做。我们只用一个脚本搞定。&lt;/p&gt;

&lt;p&gt;deploy.sh 脚本&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;
#!/bin/sh

# If a command fails then the deploy stops
set -e

printf &amp;quot;\033[0;32mDeploying updates to GitHub...\033[0m\n&amp;quot;

# Build the project.
hugo # if using a theme, replace with `hugo -t &amp;lt;YOURTHEME&amp;gt;`


# Add changes to git.
git add .

# Commit changes.
msg=&amp;quot;rebuilding site $(date)&amp;quot;
if [ -n &amp;quot;$*&amp;quot; ]; then
        msg=&amp;quot;$*&amp;quot;
fi
git commit -m &amp;quot;$msg&amp;quot;

# Push source and build repos.
git push origin master

&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;遇见一些错误&#34;&gt;遇见一些错误&lt;/h1&gt;

&lt;h2 id=&#34;page-build-failure&#34;&gt;Page build failure&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The page build failed for the &lt;code&gt;master&lt;/code&gt; branch with the following error:&lt;/p&gt;

&lt;p&gt;Unable to build page. Please try again later.&lt;/p&gt;

&lt;p&gt;For information on troubleshooting Jekyll see:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://help.github.com/articles/troubleshooting-jekyll-builds&#34;&gt;https://help.github.com/articles/troubleshooting-jekyll-builds&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;因为我没有使用Jekyll服务，使用的hugo。我们只用仓库根目录下面创建“.nojekyll”空文件即可。&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Test</title>
      <link>https://www.hexin.me/post/2019/07/test/</link>
      <pubDate>Thu, 25 Jul 2019 13:51:05 +0800</pubDate>
      
      <guid>https://www.hexin.me/post/2019/07/test/</guid>
      
        <description>

&lt;h3 id=&#34;第一篇blog测试&#34;&gt;第一篇blog测试&lt;/h3&gt;

&lt;p&gt;我是测试内容&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;2019年测试&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      
    </item>
    
  </channel>
</rss>
